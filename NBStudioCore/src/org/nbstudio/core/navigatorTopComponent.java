/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nbstudio.core;

import org.nbstudio.core.mac.macEventListener;
import org.nbstudio.explorer.RootNode;
import org.nbstudio.utils.Logger;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.ObjectInput;
import javax.swing.ActionMap;
import org.nbstudio.filesystems.ISCFileSystem;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileSystem;
import org.openide.filesystems.FileUtil;
import org.openide.loaders.DataObject;
import org.openide.loaders.DataObjectNotFoundException;
import org.openide.nodes.Node;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.nbstudio.core//navigator//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "navigatorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(
        mode = "explorer",
        openAtStartup = true)
@ActionID(
        category = "Window",
        id = "org.nbstudio.core.navigatorTopComponent")
@ActionReference(
        path = "Menu/Window",
        position = 0)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_navigatorAction",
        preferredID = "navigatorTopComponent")
@Messages({
    "CTL_navigatorAction=Projects",
    "CTL_navigatorTopComponent=Projects",
    "HINT_navigatorTopComponent=Projects"
})
public final class navigatorTopComponent extends TopComponent implements ExplorerManager.Provider, macEventListener {

    private final ExplorerManager manager = new ExplorerManager();

    public navigatorTopComponent() {
        initComponents();
        setName(Bundle.CTL_navigatorTopComponent());
        setToolTipText(Bundle.HINT_navigatorTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);

        setLayout(new BorderLayout());
        add(new BeanTreeView(), BorderLayout.CENTER);
        try {
//            FileSystem fs = new ISCFileSystem();
//            DataObject data = DataObject.find(fs.getRoot());
//            manager.setRootContext(new RootNode(data.getNodeDelegate()));
            FileObject connectionsFolder = FileUtil.getConfigFile("Connections");
            Node connectionsNode = DataObject.find(connectionsFolder).getNodeDelegate();
            manager.setRootContext(new RootNode(connectionsNode));
        } catch (DataObjectNotFoundException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        ActionMap map = getActionMap();
        map.put("delete", ExplorerUtils.actionDelete(manager, true));
        associateLookup(ExplorerUtils.createLookup(manager, map));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return manager;
    }

    private void openActionPerformed(ActionEvent evt) {
        Logger.Log("openActionPerformed");
    }
}
